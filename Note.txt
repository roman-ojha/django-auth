*) Overview:
    -> Authentication for Django Website
        -> Create user account
        -> SignIn to user account
        -> SignOut to user account
    -> User Permission:
        -> Assign specific permission to users and restrict parts of our website to those users
        -> Ex: Type of User:
            1) Default User
                -> ability to Post
                -> delete own posts
            2) MOD User
                -> Mod Delete any post
                -> Ban Users
    -> Django User Management Dashboard Using Retool
    -> Using Postgres database

*) Setup:
    -> python -m venv venv
    -> cd .\venv\Scripts\
    -> .\activate.ps1
    -> poetry init
    -> poetry add django
    -> poetry add crispy-bootstrap5
    -> django-admin startproject config .
    -> python manage.py startapp myApp
    -> INSTALLED_APPS = [
        'myApp.apps.MyappConfig',
        'crispy_forms',
        'crispy_bootstrap5',
        ]
        CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
        CRISPY_TEMPLATE_PACK = "bootstrap5"
    -> python manage.py runserver


*) 
    -> create url for the app
    -> create template for app
        -> myApp
        -> registration (this will contain all the template related to authentication)

*) setup Database
    -> we will host database remotely using heroku
    -> so create app:
        -> NOTE: heroku free database goes down for 6 hours daily
        -> add 'add-ons'
        -> https://elements.heroku.com/addons/heroku-postgresql
        -> find the database credentials to connect through django application
        -> inside setting.py:
            -> DATABASES = {
                'default': {
                    'ENGINE': 'django.db.backends.postgresql',
                    'NAME': config('DatabaseName'),
                    'USER': config('DatabaseUser'),
                    'PASSWORD': config('DatabasePassword'),
                    'HOST': config('DatabaseHost'),
                    'PORT': config('DatabasePort')
                }
            }
        -> poetry add psycopg2-binary
        -> python manage.py migrate

*) Retool Setup:
    -> create new app:
    -> add new database resources
    -> add database credentials to connect
    -> check on 'Connect using SSL'
    -> get database table data for test:
        -> select * from pg_catalog.pg_tables
    
*) create Auth Login Page:
    -> first add url on 'config/urls.py'
    -> after created template:
    -> on settings.py add:
        -> LOGIN_REDIRECT_URL = '/home'
            -> this is where we want to redirect after user get logged in
        -> LOGOUT_REDIRECT_URL='/login'
            -> when user logout we want to redirect url to 'login'
    -> and on myApp/urls.py add:
        -> path('home',views.home,name="home"),
        -> because we want to render same home page when we will redirect to url '/home'